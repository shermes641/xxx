# This is the main configuration file for the application.
# ~~~~~

application.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver= org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost/mediation"
db.default.url=${?DATABASE_URL}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Mailer plug-in settings for SendGrid
smtp.host=smtp.sendgrid.net
smtp.port=587
smtp.user=${?SENDGRID_USER}
smtp.password=${?SENDGRID_PASSWORD}

# Keen configuration
keen.project="53f75d42709a3952e3000002"
keen.masterKey="69FD3FC4F9C6366602DE0E230331D3B8"
keen.writeKey="5594a568ccf77b8c4d389a60daf4e99b9a65b2e39b9a5bc9faeda098bc410121cc3dafe5b957bdd9f58dcfbb41d0d27908507c7fa6dc705399fec29e4c867b52df2666c34c0558e3d52806d0e14e81d7bee9e8d43f571f0c1452ca05ccf66f54a78d06764d3cba08e6cbfd2e897ec20c"
keen.readKey="38e91b786e4c8150f22eac2368b038bc50d7e2a6904e97578a32e11d08a89b1ec1192272df9d9b7ca2586d5852e059f5604c702ded6d914ba68f14e8049d6023b076555e23500a8baf660c503b038a0a3fc9050872441938525c888a65cb49b85186e1b060fa5ceb8256351ef22c0902"

# Akka configuration
akka.default-dispatcher.fork-join-executor.pool-size-max=64
akka.actor.debug.receive=on

# Enables us to call a web service using https.
ws.acceptAnyCertificate=true

# Username and Password for staging server.
httpAuthUser="mediation"
httpAuthUser=${?HTTP_AUTH_USER}
httpAuthPassword="yosemite"
httpAuthPassword=${?HTTP_AUTH_PASSWORD}

# ENV variable to check if this is a staging environment.
staging=${?STAGING}

app_domain="http://mediation-staging.hyprmx.com"
app_domain=${?APP_DOMAIN}
