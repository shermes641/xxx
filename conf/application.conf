# This is the main configuration file for the application.
# ~~~~~

application.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver= org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost/mediation"
db.default.url=${?DATABASE_URL}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Mailer plug-in settings for SendGrid
smtp.host=smtp.sendgrid.net
smtp.port=587
smtp.user="mediation"
smtp.user=${?SENDGRID_USER}
smtp.password=${?SENDGRID_PASSWORD}

# Keen configuration
keen.project=${?KEEN_PROJECT}
keen.masterKey=${?KEEN_MASTER_KEY}
keen.writeKey=${?KEEN_WRITE_KEY}
keen.readKey=${?KEEN_READ_KEY}

# Akka configuration
akka.default-dispatcher.fork-join-executor.pool-size-max=64
akka.actor.debug.receive=on

# Username and Password for staging server.
httpAuthUser="mediation"
httpAuthUser=${?HTTP_AUTH_USER}
httpAuthPassword=${?HTTP_AUTH_PASSWORD}

# ENV variable to check if this is a staging environment.
staging=${?STAGING}

# Jun Group API URL and login information
jungroup.url="live.hyprmx.com"
jungroup.url=${?PLAYER_URL}
jungroup.user="mediation"
jungroup.user=${?PLAYER_MEDIATION_USER}
jungroup.password=${?PLAYER_MEDIATION_PASSWORD}
jungroup.email="mediation-support@hyprmx.com"
jungroup.email=${?PLAYER_ERROR_EMAIL}
jungroup.callbackurl="http://mediation.hyprmx.com/v1/reward_callbacks/%s/hyprmarketplace?time=EPOCH_SECONDS&quantity=QUANTITY&offer_profit=OFFER_PROFIT&reward_id=REWARD_ID&uid=UID&sub_id=SID&sig=SHA256"
jungroup.callbackurl=${?PLAYER_CALLBACK_URL}
jungroup.token=${?PLAYER_TOKEN}

hyprmarketplace.ad_provider_id=2
hyprmarketplace.ad_provider_id=${?HYPR_MARKETPLACE_AD_PROVIDER_ID}
hyprmarketplace.team_email="publishing@hyprmx.com"
hyprmarketplace.team_email=${?HYPR_MARKETPLACE_TEAM_EMAIL}

# Email that receives notifications from background tasks
hyprmediate_ops_email="mediation-developers@jungroup.com"
hyprmediate_ops_email=${?HYPRMEDIATE_OPS_EMAIL}

# Base URL for HyprMarketplace reporting API
hyprmarketplace.reporting_url="https://live.hyprmx.com/fyber/v1"
hyprmarketplace.reporting_url=${?HYPR_MARKETPLACE_REPORTING_URL}

# Base URL for AdColony reporting API
adcolony.reporting_url="https://clients.adcolony.com/api/v2/publisher_summary"
adcolony.reporting_url=${?AD_COLONY_REPORTING_URL}

# Base URL for AppLovin reporting API
applovin.reporting_url="https://r.applovin.com/report"
applovin.reporting_url=${?APP_LOVIN_REPORTING_URL}

app_domain="http://callback.hyprmx.com"
app_domain=${?APP_DOMAIN}

# ENV variables for setting last branch and commit SHA on page footer.
latestSHA=""
latestSHA=${?LATEST_SHA}
latestBranch=""
latestBranch=${?LATEST_BRANCH}

# Configurable delay for sign up/sign in failure
authentication_failure_delay=1000
authentication_failure_delay=${?AUTHENTICATION_FAILURE_DELAY}
